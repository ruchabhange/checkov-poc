name: checkov-terraform
on:
  pull_request:
    types: [opened]
    paths: 
      - 'terraform/**'
    
env:
  PR_NUMBER: ${{ github.event.number }}

jobs:
  checkov-job:
    runs-on: ubuntu-latest
    name: checkov-action
    steps:
      - name: Checkout repo
        uses: actions/checkout@master
      - uses:  'google-github-actions/auth@v1'
        with:
          credentials_json: ${{ secrets.SERVICE_ACCOUNT_KEY }}
          project_id: ${{ secrets.PROJECT_ID }}
          export_default_credentials: true

      - name: Run Checkov action
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: terraform/
          quiet: true # optional: display only failed checks
          output_format: github_failed_only
          
      - name: Post comment to GitHub PR
        uses: mshick/add-pr-comment@v1
        if: ${{ failure() && steps.checkov.outcome == 'failure' }}
        with:
         repo-token: ${{ secrets.TOKEN }}
         message: |
            ${{ env.CHECKOV_RESULTS }}
            
        # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v
        
    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: terraform init
        env:
         credentials_json: ${{ secrets.SERVICE_ACCOUNT_KEY }}

    # Checks that all Terraform configuration files adhere to a canonical format
      - name: Terraform Format
        run: terraform fmt -check
